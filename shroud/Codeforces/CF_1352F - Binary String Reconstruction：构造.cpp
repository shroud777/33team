//题意：对于一个 01 串 s，相邻两个字符组成的 01 串将被统计，其中：
//n0:代表 '0' 的个数为 2 的字符串的个数    n1:代表 '1' 和 '0' 的个数都为 1 的字符串的个数    n2:代表 '1' 的个数为 2 的字符串的个数
//现在给出 n0，n1，n2，请你构造字符串 s

//思路：我们可以先考虑 n0 和 n2 的存放，我们只要先放 n0+1 个 '0'，n2+1 个 '1'，就可以满足 n0 和 n2 了，但是这个时候会多出一个 "01" 也就是 1 个 n1，但是我们有可以发现，只要同时有 n0 和 n2，就必然会存在一个 n1
//那么我们接下来只需要安排剩下 n1-1 个就可以了，我们只需要在后面放 n1-1 个 '1' or '0'，我们用循环奇偶控制即可
//最后注意，由于我们是存放 n0+1 和 n2+1 个，就算 n0 和 n2 等于 0，也会输出多余的 '1' 和 '0'，那么我们要注意，只有 n0 或者 n2 大于 0 或者有 n1 存在，才按照上述策略，否则的话会干扰答案

#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
 
const int maxn=8e3+10;
 
int x,y,z;
 
int main(){
    int t;
    cin>>t;
    while(t--){
        cin>>x>>y>>z;
        if(x||y) for(int i=1;i<=x+1;i++) printf("0");
        if(z||y) for(int i=1;i<=z+1;i++) printf("1");
        for(int i=1;i<y;i++){
            if(i&1) printf("0");
            else printf("1");
        }
        puts("");
    }
    return 0;
}
